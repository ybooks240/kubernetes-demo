
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: myapps.app.github.com
spec:
  group: app.github.com
  names:
    kind: Myapp
    listKind: MyappList
    plural: myapps
    singular: myapp
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: Myapp is the Schema for the myapps API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: MyappSpec defines the desired state of Myapp
          properties:
            image:
              type: string
            ports:
              items:
                description: ServicePort contains information on service's port.
                properties:
                  name:
                    description: The name of this port within the service. This must
                      be a DNS_LABEL. All ports within a ServiceSpec must have unique
                      names. When considering the endpoints for a Service, this must
                      match the 'name' field in the EndpointPort. Optional if only
                      one ServicePort is defined on this service.
                    type: string
                  nodePort:
                    description: 'The port on each node on which this service is exposed
                      when type=NodePort or LoadBalancer. Usually assigned by the
                      system. If specified, it will be allocated to the service if
                      unused or else creation of the service will fail. Default is
                      to auto-allocate a port if the ServiceType of this Service requires
                      one. More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                    format: int32
                    type: integer
                  port:
                    description: The port that will be exposed by this service.
                    format: int32
                    type: integer
                  protocol:
                    description: The IP protocol for this port. Supports "TCP", "UDP",
                      and "SCTP". Default is TCP.
                    type: string
                  targetPort:
                    anyOf:
                    - type: integer
                    - type: string
                    description: 'Number or name of the port to access on the pods
                      targeted by the service. Number must be in the range 1 to 65535.
                      Name must be an IANA_SVC_NAME. If this is a string, it will
                      be looked up as a named port in the target Pod''s container
                      ports. If this is not specified, the value of the ''port'' field
                      is used (an identity map). This field is ignored for services
                      with clusterIP=None, and should be omitted or set equal to the
                      ''port'' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service'
                    x-kubernetes-int-or-string: true
                required:
                - port
                type: object
              type: array
            replicas:
              format: int32
              type: integer
          required:
          - image
          - replicas
          type: object
        status:
          description: MyappStatus defines the observed state of Myapp
          properties:
            availableReplicas:
              description: Total number of available pods (ready for at least minReadySeconds)
                targeted by this deployment.
              format: int32
              type: integer
            collisionCount:
              description: Count of hash collisions for the Deployment. The Deployment
                controller uses this field as a collision avoidance mechanism when
                it needs to create the name for the newest ReplicaSet.
              format: int32
              type: integer
            conditions:
              description: Represents the latest available observations of a deployment's
                current state.
              items:
                description: DeploymentCondition describes the state of a deployment
                  at a certain point.
                properties:
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status
                      to another.
                    format: date-time
                    type: string
                  lastUpdateTime:
                    description: The last time this condition was updated.
                    format: date-time
                    type: string
                  message:
                    description: A human readable message indicating details about
                      the transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of deployment condition.
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            observedGeneration:
              description: The generation observed by the deployment controller.
              format: int64
              type: integer
            readyReplicas:
              description: Total number of ready pods targeted by this deployment.
              format: int32
              type: integer
            replicas:
              description: Total number of non-terminated pods targeted by this deployment
                (their labels match the selector).
              format: int32
              type: integer
            unavailableReplicas:
              description: Total number of unavailable pods targeted by this deployment.
                This is the total number of pods that are still required for the deployment
                to have 100% available capacity. They may either be pods that are
                running but not yet available or pods that still have not been created.
              format: int32
              type: integer
            updatedReplicas:
              description: Total number of non-terminated pods targeted by this deployment
                that have the desired template spec.
              format: int32
              type: integer
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
